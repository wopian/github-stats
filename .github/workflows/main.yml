name: Generate Stats Images
on:
  workflow_dispatch:
  push:
    branches: [master]
  schedule:
    - cron: "0 0 * * *"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure GPG Key
        run: echo -n "$GPG_KEY" | gpg --import
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: "x64"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install -r requirements.txt
      - name: Generate images
        run: |
          python3 --version
          python3 generate.py
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          EXCLUDED: "GoogleChrome/workbox,JanDeDobbeleeer/oh-my-posh,alexcosta97/mac-setup,alexcosta97/web-apps-project,apideck-libraries/better-ajv-errors,hummingbird-me/kitsu-server,hummingbird-me/kitsu-tools,hummingbird-me/kitsu-web,hussein181/C0699PropertyProject,jstrieb/github-stats,jwoods02/Mosaic-Island-Timesheet-System,jwoods02/game.jwoods.me,otakulogy/anime-streaming,tonsky/FiraCode,visionmedia/superagent,wopian/AnimeTierList,wopian/advent-of-code,wopian/base-65503,wopian/bnu-mobile-systems,wopian/bobstudios-client,wopian/bucks-new-university,wopian/co666,wopian/co666-refresher-app,wopian/co666-reminders,wopian/codingame,wopian/conventional-changelog-angular-all-2,wopian/css-houdini.rocks,wopian/dot,wopian/ember-responsive,wopian/enterprise-systems-development,wopian/github-stats,wopian/hatayama,wopian/hatayama-app,wopian/kitsu-anime-by-scores,wopian/kitsu-csp,wopian/kitsu-inactivity-pruner,wopian/kitsu-missing-enddates,wopian/kitsu-popular-grabber,wopian/kitsu-post-bumper,wopian/kitsu-season-grabber,wopian/land-registry-api,wopian/lunar-lander,wopian/oo-systems-development,wopian/open-source-systems,wopian/open-source-systems-2,wopian/random-number-game,wopian/setup-node-test,wopian/skylark,wopian/tracker-killer,wopian/whatpulse-stats,wopian/wopian.moe,wopian/wwmcc,wopian/yannic.world-client"
          EXCLUDED_LANGS: "Objective-C,ShaderLab,HLSL,PLpgSQL,Perl,Text,Go,Nunjucks,Makefile,Clojure,Inno Setup,Assembly,Java,PHP,C++,INI,C,NSIS,Gherkin,YAML"
          INCLUDE_FORKED_REPOS: true
          EXCLUDE_CONTRIB_REPOS: false
          EXCLUDE_ARCHIVE_REPOS: false
          EXCLUDE_PRIVATE_REPOS: false
          EXCLUDE_PUBLIC_REPOS: false
          STORE_REPO_VIEWS: true
          STORE_REPO_CLONES: true
      - name: Commit to the repo
        run: |
          git config --global user.name ${{ secrets.GH_USERNAME }}
          git config --global user.email ${{ secrets.GH_EMAIL }}
          git config --global user.signingkey ${{ secrets.GPG_SIGNING_KEY }}
          git config --global commit.gpgsign true
          git add .
          # "echo" returns true so the build succeeds, even if no changed files
          git commit -m 'Update daily stats' || echo
          git push
